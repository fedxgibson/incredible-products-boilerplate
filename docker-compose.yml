# docker-compose.yml (Production - base file)
services:
  app:
    build:
      context: app
      target: runner
    ports:
      - "3000:3000"
    environment:
      - API_URL=http://server:3001/api
      - NODE_ENV=production
      - JWT_SECRET=${JWT_SECRET:-random}
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s

  server:
    build: ./server
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=production
      - PORT=3001
      - HOST=0.0.0.0
      - MONGO_URI=mongodb://mongodb:27017
      - MONGO_DB=app
      - JWT_SECRET=asfasfsasdiojo
      - JWT_EXPIRES_IN=1h
    depends_on:
      - mongodb
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s

  mongodb:
    image: mongo:6
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    environment:
      - MONGO_INITDB_DATABASE=app
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s

  terraform:
    image: hashicorp/terraform:latest
    volumes:
      - .:/workspace
    working_dir: /workspace
    entrypoint: [""]
    command: tail -f /dev/null 

volumes:
  mongodb_data: